@startuml

package model {
    class CityMap {
       -Route shortestPath(startIntersection: Intersection, endIntersection: Intersection)
       +DeliveryGraph computeDeliveryGraph(request: DeliveryRequest)
       +List<Intersection> getIntersections()
       +List<StreetSection> getStreetSections()
    }

    class DeliveryGraph {
        +Route getRoute(startId: int, endId: int)
    }

    class StreetSection {
        -length: int
        -duration: int
        -streetName: String
        #Intersection getStartIntersection()
        #Intersection getEndIntersection()
    }

    class Intersection {
        -id: int
        -x: int
        -y: int
        +int getX()
        +int getY()
        #int getId()
    }

    abstract class AbstractWayPoint {
        +Intersection getIntersection()
        +int getX()
        +int getY()
        #int getId()
    }

    class DeliveryAddress {
        -deliveryDuration: int
'        -deliveryIntervalStart: int
'        -deliveryIntervalEnd: int
        +int getDeliveryDuration()
    }

    class Warehouse {
    }

    class DeliveryRequest {
        -startTime: int
        +void addDeliveryAddress(address: DeliveryAddress)
        +void removeDeliveryAddress(address: DeliveryAddress)
    }

    class Planning {
    }

    class Route {
        -duration: int
        +Waypoint getStartWaypoint()
        +Waypoint getEndWaypoint()
    }

    CityMap o-- StreetSection
    CityMap o-- Intersection
    AbstractWayPoint --> Intersection
    StreetSection --> Intersection : end
    StreetSection --> Intersection : start
    Route o-- StreetSection
    Route --> AbstractWayPoint : end
    Route --> AbstractWayPoint : start
    AbstractWayPoint <|-- DeliveryAddress
    AbstractWayPoint <|-- Warehouse
    DeliveryRequest o-- DeliveryAddress
    DeliveryRequest -left-> Warehouse : warehouse
    DeliveryGraph o-- Route
    Planning o-- Route
}



@enduml
