class Exception
package services.xml.exception {

    abstract class ParserException
    abstract class ParserSemanticException
    abstract class ParserSyntaxException
    
    abstract class ParserSemanticException
    class ParserDuplicateObjectException
    class ParserIntegerValueException
    class ParserShouldBeIntegerValueException
    class ParserMissingArgumentException
    
    abstract class ParserSyntaxException
    abstract class ParserNodesNumberException
    class ParserInvalidIdException
    class ParserMalformedXmlException
    
    abstract class ParserNodesNumberException
    class ParserBoundedNodesNumberException
    class ParserLowerBoundedNodesNumberException
    
    
    Exception <|-- ParserException
    
    ParserException <|-l- ParserSyntaxException
    ParserException <|----- ParserSemanticException
    
    ParserSemanticException <|-l- ParserDuplicateObjectException
    ParserSemanticException <|-- ParserIntegerValueException
    ParserSemanticException <|-- ParserShouldBeIntegerValueException
    ParserSemanticException <|-- ParserInvalidIdException
    ParserSemanticException <|-- ParserMissingArgumentException
    
    ParserSyntaxException <|-- ParserNodesNumberException
    ParserSyntaxException <|-l- ParserMalformedXmlException
    
    ParserNodesNumberException <|-- ParserBoundedNodesNumberException
    ParserNodesNumberException <|-l- ParserLowerBoundedNodesNumberException
    
    
    class ParserDuplicateObjectException {
        -duplicate: Object
    }
    
    class ParserIntegerValueException {
        -value: int
    }
    
    class ParserNodesNumberException {
        -actualNodesNumber: int
        -nodesName: String
    }
    
    class ParserBoundedNodesNumberException {
        -maxNodesNumberExpected: int
        -minNodesNumberExpected: int
    }
    
    class ParserLowerBoundedNodesNumberException {
        -minNodesNumberExpected: int
    }
    
}
