@startuml

package services {
    package xml {
        class Parser {
            CityMap getStreetSections(pathToXml: String)
            DeliveryRequest getDeliveryRequest(pathToXml: String, cityMap: CityMap)
        }
    }

    package tsp {
        abstract class TspSolver {
            #bestSolution: List<int>
            #bestSolutionCost: int
            +{abstract} Planning solve(graph: DeliveryGraph)
            #{abstract} WayPointIterator iterator(collection: AbstractWayPoint[], graph: DeliveryGraph)
            #{abstract} int bound(point: AbstractWayPoint, graph: DeliveryGraph)
        }

        class BasicTspSolver {
            +Planning solve(graph: DeliveryGraph)
            #WayPointIterator iterator(collection: AbstractWayPoint[], graph: DeliveryGraph)
            #int bound(point: AbstractWayPoint, graph: DeliveryGraph)
        }

        class AdvancedTspSolver {
            +Planning solve(graph: DeliveryGraph)
            #WayPointIterator iterator(collection: AbstractWayPoint[], graph: DeliveryGraph)
            #int bound(point: AbstractWayPoint, graph: DeliveryGraph)
        }

        class WayPointIterator {
            +AbstractWayPoint next()
            +boolean hasNext()
        }

        TspSolver <|-- BasicTspSolver
        TspSolver <|-- AdvancedTspSolver
    }
}



@enduml
